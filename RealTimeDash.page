<apex:page standardController="Real_Time_Dash__c" extensions="RealTimeDash" showHeader="false" sidebar="false">

<apex:includeScript value="{!$Resource.cometd}"/>
<apex:includeScript value="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"/>
<apex:includeScript value="{!$Resource.json2}"/>
<apex:includeScript value="{!$Resource.jquery_cometd}"/>
<script type="text/javascript">
(function($){
    $(document).ready(function() {
        //subscribe to push topic
        $.cometd.init({
            url: window.location.protocol+'//'+window.location.hostname+'/cometd/29.0/',
            requestHeaders: { Authorization: 'OAuth {!$Api.Session_ID}'}
        });
        $.cometd.subscribe('/topic/Opportunity', function(message) {
            console.log('Event type: ' + JSON.stringify(message.data.event.type));
            if(message.data.event.type == 'created'){
                //add if matched query criteria
            }else if(message.data.event.type == 'updated'){
                //find record and update
                angular.element(document.getElementById('rtdashtable')).scope().$apply(function(scope){
                    scope.updateRecord(message.data.sobject);
                });
            }else if(message.data.event.type == 'deleted'){
                //find record and delete
                angular.element(document.getElementById('rtdashtable')).scope().$apply(function(scope){
                    scope.deleteRecord(message.data.sobject);
                });
            }
        });
    });
})(jQuery)
</script>

<style type="text/css">
.ng-table {
    border: 1px solid lightgray;
    -moz-border-radius: 15px;
    border-radius: 15px;
}
</style>

<apex:includeScript value="//ajax.googleapis.com/ajax/libs/angularjs/1.2.0-rc.2/angular.min.js"/>
<link href="{!URLFOR($Resource.ngTable, 'ng-table.css')}" rel="stylesheet" media="screen"/>
<apex:includeScript value="{!$Resource.ngTableJS}"/>
<link href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css" rel="stylesheet" media="screen"/>

 
    <html xmlns:ng="http://angularjs.org" ng-app="RTDash" lang="en">
      <head></head>
      <body ng-app="RTDash">
        <div ng-controller="RTDashCtrl" margin="100px 100px 100px 100px">
            <input type="text" ng-model="searchTerm" class="input-medium search-query" placeholder="Search..."/>
            <br/>
            <p><strong>Page:</strong> {{tableParams.page()}}</p>
            <table id="rtdashtable" ng-table="tableParams" template-pagination="custom/pager" class="table">
            <tr>
              <th ng-repeat="column in columns" ng-show="column.visible"
                  class="text-center sortable" ng-class="{
                      'sort-asc': tableParams.isSortBy(column.field, 'asc'),
                      'sort-desc': tableParams.isSortBy(column.field, 'desc')
                    }"
                  ng-click="tableParams.sorting(column.field, tableParams.isSortBy(column.field, 'asc') ? 'desc' : 'asc')">
                  {{column.title}}
              </th>
          </tr>          
            <tr ng-repeat="record in $data | filter: searchTerm">
              <td ng-repeat="column in columns" ng-show="column.visible" sortable="column.field">
                  {{record[column.field]}}
              </td>
            </tr>
            </table>
        </div>
      </body>
   </html>
<script>
var app = angular.module('RTDash', ['ngTable']);
app.filter('getById', function() {
  return function(input, id) {
    var i=0, len=input.length;
    for (; i<len; i++) {
      if (input[i].Id.substring(0,15) == id.substring(0,15)) {
        return input[i];
      }
    }
    return null;
  }
});
app.controller('RTDashCtrl', function($scope, $filter, ngTableParams) {
    var data = {!Records};
    var cols = {!colsJSON};
    console.log(cols);
    
    $scope.columns = [];
    for(var i=0;i<cols.length;i++){
        $scope.columns.push({title : cols[i], field : cols[i], visible : true});
    }
    
    /*
    $scope.columns = [
        { title: 'Id', field: 'Id', visible: true },
        { title: 'Name', field: 'Name', visible: true },
        { title: 'StageName', field: 'StageName', visible: true }
    ];
    */

    console.log($scope.columns);

    $scope.tableParams = new ngTableParams({
        page: 1,            // show first page
        count: 10,          // count per page
        sorting: {
            Name: 'asc'     // initial sorting
        }
    }, {
        total: data.length, // length of data
        getData: function($defer, params) {
            // use build-in angular filter
            var orderedData = params.sorting() ?
                    $filter('orderBy')(data, params.orderBy()) :
                    data;

            $scope.records = orderedData.slice((params.page() - 1) * params.count(), params.page() * params.count());

            params.total(orderedData.length); // set total for recalc pagination
            $defer.resolve($scope.records);    
        }
    });
    
    $scope.updateRecord = function(newRecord){
        console.log(newRecord);
        //update data
        var found = $filter('getById')(data, newRecord.Id);
        if(found){
          console.log(found);
          //replace in data
          for(var i = data.length - 1; i >= 0; i--){
            if(data[i].Id.substring(0,15) == newRecord.Id.substring(0,15)){
                console.log(data[i]);
                console.log(i);
                data.splice(i,1,newRecord);
            }
          }
        }
        //update grid
        var found = $filter('getById')($scope.records, newRecord.Id);
        if(found){
          console.log(found);
          //replace in table
          for(var i = $scope.records.length - 1; i >= 0; i--){
            if($scope.records[i].Id.substring(0,15) == newRecord.Id.substring(0,15)){
                console.log($scope.records[i]);
                console.log(i);
                $scope.records.splice(i,1,newRecord);
            }
          }  
        }        
    };
    
    $scope.deleteRecord = function(delRecord){
        //remove from data
        for(var i = data.length - 1; i >= 0; i--){
          if(data[i].Id.substring(0,15) == delRecord.Id.substring(0,15)){
              console.log(data[i]);
              console.log(i);
              data.splice(i,1);
          }
        }
        //remove from table
        for(var i = $scope.records.length - 1; i >= 0; i--){
          if($scope.records[i].Id.substring(0,15) == delRecord.Id.substring(0,15)){
              console.log($scope.records[i]);
              console.log(i);
              $scope.records.splice(i,1);
          }
        }
    };    
});


</script>
<script type="text/ng-template" id="custom/pager">
    <ul class="pager ng-cloak">
      <li ng-repeat="page in pages"
            ng-class="{'disabled': !page.active, 'previous': page.type == 'prev', 'next': page.type == 'next'}"
            ng-show="page.type == 'prev' || page.type == 'next'" ng-switch="page.type">
        <a ng-switch-when="prev" ng-click="params.page(page.number)" href="">&laquo; Previous</a>
        <a ng-switch-when="next" ng-click="params.page(page.number)" href="">Next &raquo;</a>
      </li>
        <li> 
        <div class="btn-group">
            <button type="button" ng-class="{'active':params.count() == 10}" ng-click="params.count(10)" class="btn btn-default">10</button>
            <button type="button" ng-class="{'active':params.count() == 25}" ng-click="params.count(25)" class="btn btn-default">25</button>
            <button type="button" ng-class="{'active':params.count() == 50}" ng-click="params.count(50)" class="btn btn-default">50</button>
            <button type="button" ng-class="{'active':params.count() == 100}" ng-click="params.count(100)" class="btn btn-default">100</button>
        </div>
        </li>
    </ul>
</script>
</apex:page>